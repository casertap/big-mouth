service: aws-nodejs

plugins:
  - serverless-pseudo-parameters
  - serverless-sam

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, "us-east-1"}
  dev:
    api_id: "5ymkmf7cz7"
  prod:
    api_id: "npaohfu58k"
  api_url: "https://${self:custom.${self:custom.stage}.api_id}.execute-api.${self:custom.region}.amazonaws.com/${self:custom.stage}"

provider:
  name: aws
  runtime: nodejs6.10
  region: ${self:custom.region}
  iamRoleStatements:
    - Effect: Allow
      Action: dynamodb:scan
      Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/restaurants
    - Effect: Allow
      Action: execute-api:Invoke
      Resource: arn:aws:execute-api:#{AWS::Region}:#{AWS::AccountId}:*/*/GET/restaurants

functions:
  get-index:
    handler: functions/get-index.handler
    events:
      - http:
         path: /
         method: get
    environment:
      restaurants_api: ${self:custom.api_url}/restaurants
      cognito_user_pool_id: us-east-1_BXKvdrj8y
      cognito_client_id: 5jocffapd6kamako57uoscfsgu

  get-restaurants:
    handler: functions/get-restaurants.handler
    events:
      - http:
          path: /restaurants/
          method: get
          authorizer: aws_iam
    environment:
      restaurants_table: restaurants

  search-restaurants:
    handler: functions/search-restaurants.handler
    events:
      - http:
          path: /restaurants/search
          method: post
          authorizer:
            arn: arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/us-east-1_BXKvdrj8y
    environment:
      restaurants_table: restaurants

resources:
  Resources:
    restaurantsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: restaurants-${self:custom.stage}
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
